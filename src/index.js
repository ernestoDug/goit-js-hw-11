import axios, { isCancel, AxiosError } from 'axios';

import { Notify } from 'notiflix/build/notiflix-notify-aio';

import { fetchImages } from './fetchImages.js';

import {markUper} from './markUper.js';

const formVar = document.querySelector('.search-form');

formVar.addEventListener('submit', submiterF);

const galeryVar = document.querySelector(".gallery");
let  inputValue = null;

// –æ–±—Å–µ—Ä–≤–µ—Ä
let options = {
  root: null,
  // —Ç–æ–±—Ç–æ –±—É–¥–µ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è —Å–ª—É—Ö–∞—Ç–∏ MDN
  rootMargin: '200px',
  // threshold: 1.0
}

let observer = new IntersectionObserver(onObserv, options);

// –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–∞ –æ–±—Å–µ—Ä–≤–µ—Ä–∞********************************************
const targetForObservVar = document.querySelector(".js-oserverTarget");
// console.log(targetForObservVar);
let currentPage = 1;

// —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ —Å–∞–±–º—ñ—Ç—É
function submiterF(event) {
  event.preventDefault();
  inputValue = event.currentTarget.searchQuery.value;
  if(inputValue === "" || inputValue === " ")
  {
    Notify.warning(`ü§ó –ë—É–¥—å –ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –∑–∞–ø–∏—Ç`);
    return;
  }
  galeryVar.innerHTML = "";

  // console.log(inputValue);
  // –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞–ø–∏—Ç—É
  fetchImages(inputValue)
  .then(async resp => {
    const images =await markUper(resp);
    galeryVar.insertAdjacentHTML('beforeEnd',  images);
      observer.observe(targetForObservVar);

  })
  
  // console.log(event.currentTarget);
  // console.log(event.currentTarget.searchQuery.value);
}


function onObserv (entries, observer) {
  entries.forEach((entry) => {
      if(entry.isIntersecting)
      {
        console.log("keyky");
        currentPage +=1;
                fetchImages(inputValue, currentPage).then((data) => {galeryVar.insertAdjacentHTML('beforeend', markUper(data));
// —Å—Ç–∞–≤–∏–º–æ —É–º–æ–≤—É —â–æ–± –≤–∏–º–∏–∫–∞—Ç–∏ –æ–±—Å–µ—Ä–≤–µ—Ä
// if(page !== total)
// // –æ–π—è —Ç–æ—Ç–∞–ª –ø–µ–π–¥–∂ –º–æ–∂–µ —ñ–Ω–∞—à–∫–µ –Ω–∞–∑–∏–≤—Ç–∏–∞—Å—è —Ç—Ä–µ–±–∞ –≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–∏–≤—Ç–∏—Å—å —É –º–µ–Ω–µ –≤ –∫–æ—à–∞–∫–∞—Ö —è —ó—ó –Ω–µ –∑–Ω–∞–π—à–æ–≤
// {
//   // –≤–∏–º–∏–∫–∞–Ω–Ω—è –æ–±—Å–µ—Ä–≤–µ—Ä–∞ –º–µ—Ç–æ–¥–æ–º –π–æ–≥–æ –≤—ñ –≤–∏–º–∏–∫–∞—î —Ç—ñ–ª—å–∫–∏ —Å–ª—ñ–¥–∫—É–≤–∞–Ω–Ω—è –∑–∞ —Ç–∏–º –¥—ñ–≤—á–∏–∫–æ–º –∞ –Ω–µ –∑–∞ –≤—Å–∏–º –∑–∞ –≤—Å–∏–º —î —ñ–Ω—à–∏–π –º–µ—Ç–æ–¥
//   observer.unobserve(targetForObservVar)}
})
.catch((error) => {
  Notify.warning(`üòí –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ...`);
  console.log(error)
})
}
})
}










export { inputValue, targetForObservVar };
