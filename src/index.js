// loader
// https://cssloaders.github.io/
// —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
// https://notiflix.github.io/documentation

import axios, { isCancel, AxiosError } from 'axios';

import { Notify } from 'notiflix/build/notiflix-notify-aio';

import { fetchImages, loaderVar } from './fetchImages.js';

import { markUper } from './markUper.js';

// –û–ø–∏—Å–∞–Ω–∏–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
import SimpleLightbox from 'simplelightbox';
// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤
import 'simplelightbox/dist/simple-lightbox.min.css';

const formVar = document.querySelector('.search-form');

formVar.addEventListener('submit', submiterF);

const galeryVar = document.querySelector('.gallery');
let inputValue = null;


// –æ–±—Å–µ—Ä–≤–µ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
let options = {
  root: null,
  rootMargin: '300px',
  threshold: 1.0,
};
// –µ–∫–∑–º–µ–º–ø–ª—è—Ä  –æ–±–∑–µ—Ä–≤–µ—Ä–∞
let observer = new IntersectionObserver(onObserv, options);

// –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–∞ –æ–±—Å–µ—Ä–≤–µ—Ä–∞********************************************
const targetForObservVar = document.querySelector('.js-oserverTarget');
// console.log(targetForObservVar);
let currentPage = 1;


// —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ —Å–∞–±–º—ñ—Ç—É
function submiterF(event) {
  event.preventDefault();

  // –ø–µ—Ä–≤–µ—Ä—ñ–∫–∞ –Ω–∞ –º–∞—è—á–Ω—é —É –≤–≤–æ–¥—ñ
  inputValue = event.currentTarget.searchQuery.value;
  if (inputValue === '' || inputValue === ' ') {
    Notify.warning(`ü§ó –ë—É–¥—å –ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –∑–∞–ø–∏—Ç`);
    return;
  }
  galeryVar.innerHTML = '';
  // console.log(inputValue);

  // –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞–ø–∏—Ç—É
  fetchImages(inputValue)
      .then(async resp => {
      // –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –º–∞–ª—ñ–≤–Ω–∏–∫–∞
      const images = await markUper(resp);
      galeryVar.insertAdjacentHTML('beforeEnd', images);
      //  –æ–±—Å–µ—Ä–≤–µ—Ä —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î —Ç–∞—Ä–≥–µ—Ç
      observer.observe(targetForObservVar);
    })
    .catch(error =>
      Notify.warning(`üòí –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—è, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ`)
    );
}
// —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Å–µ—Ä–≤–µ—Ä–∞
function onObserv(entries, observer) {
  
  let gallery = new SimpleLightbox('.gallery a', {
    navText: ['üí´', 'üí´'],
    captionsData: 'alt',
    captionPosition: '',
    captionDelay: 250,
    closeText: 'üôÖ‚Äç‚ôÄÔ∏è',
    animationSpeed: 300,
    download: 'true',
  });
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      currentPage += 1;
      fetchImages(inputValue, currentPage)
      .then(data => {
        galeryVar.insertAdjacentHTML('beforeend', markUper(data));
        // console.log('–æ–±—Å', entry);
        // –ø–ª–∞–≤–Ω–∏–π —Å–∫—Ä–æ–ª
        const { height: cardHeight } = document
        .querySelector(".gallery")
        .firstElementChild.getBoundingClientRect();
        
        window.scrollBy({
          top: cardHeight * 2,
          behavior: "smooth",
        });
        // –º–µ—Ç–æ–¥ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ —Ä—É–π–Ω—É–≤–∞–Ω–Ω—è –ª–∞–π—Ç–±–æ–∫—Å—É
        gallery.refresh();  

          // —Å—Ç–∞–≤–∏–º–æ —É–º–æ–≤—É —â–æ–± –≤–∏–º–∏–∫–∞—Ç–∏ –æ–±—Å–µ—Ä–≤–µ—Ä
          // console.log(data.views, "tot")
          if (data.page === data.total) {
            // //   // –≤–∏–º–∏–∫–∞–Ω–Ω—è –æ–±—Å–µ—Ä–≤–µ—Ä–∞ –º–µ—Ç–æ–¥–æ–º –π–æ–≥–æ –≤—ñ –≤–∏–º–∏–∫–∞—î —Ç—ñ–ª—å–∫–∏ —Å–ª—ñ–¥–∫—É–≤–∞–Ω–Ω—è –∑–∞ —Ç–∏–º –¥—ñ–≤—á–∏–∫–æ–º –∞ –Ω–µ –∑–∞ –≤—Å–∏–º –∑–∞ –≤—Å–∏–º —î —ñ–Ω—à–∏–π –º–µ—Ç–æ–¥
            observer.unobserve(targetForObservVar);
          }
        })
        .catch(error =>
          Notify.warning(`üòí –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—è —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ`)
          );
        } 
      });
    
  }


export { inputValue, targetForObservVar, galeryVar, observer };
